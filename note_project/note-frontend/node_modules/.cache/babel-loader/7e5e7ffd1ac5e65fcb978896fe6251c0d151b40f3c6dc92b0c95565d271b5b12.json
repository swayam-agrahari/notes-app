{"ast":null,"code":"var _jsxFileName = \"/home/swayam/note_project/note-frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react'\n\n// import { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n// import {Link} from 'react-router-dom'\n\n// const NotePage = ({ match,history }) => {\n//   let noteId = match.params.id\n//   let [note, setNote] = useState(null)\n\n//   useEffect(() => {\n//     getNote()\n//   }, [noteId])\n\n//   let getNote = async () => {\n//     if(noteId === 'new') return\n//     let response = await fetch(`/api/notes/${noteId}`)\n//     let data = await response.json()\n//     setNote(data)\n//   }\n//   let createNote = async () => {\n//     fetch(`/api/notes/create/`, {\n//       method:\"POST\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(note)\n//     })\n//   }\n\n//   let updateNote = async () => {\n//     fetch(`/api/notes/${noteId}/update/`, {\n//       method:\"PUT\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(note)\n//     })\n//     getNote()\n\n//   }\n//   let deleteNote = async () => {\n//     fetch(`/api/notes/${noteId}/delete/`,{\n//       method:\"DELETE\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n\n//     })\n//   }\n//   let handleDelete = () =>{\n//     deleteNote()\n//     history.push('/')\n\n//   }\n\n//   let handleSubmit = () =>{\n//     if(noteId !=='new' && note.body=== \"\") {\n//       deleteNote()}\n\n//     else if(noteId=== 'new' && note.body !== \"\" ) {\n//       createNote()\n//     }\n//     else if(noteId !=='new') {\n//       updateNote()\n//     }\n//     history.push('/')\n\n//   }\n//   return (\n\n//     <div className='note'>\n//       <div className='note-header'>\n//         <h3>\n//             <ArrowLeft onClick={handleSubmit}/>\n\n//         </h3>\n\n//         {noteId !== 'new' ?(\n//         <button onClick={handleDelete}>Delete</button>) \n//         :(\n//           <button onClick={handleSubmit}>Done</button>) \n//         }\n\n//       </div > \n//       <textarea onChange={(e) => {setNote({...note,'body':e.target.value})}}  value={note?.body}></textarea>\n// </div >\n\n//   )\n// }\n\n// export default NotePage\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = ({\n  history\n}) => {\n  _s();\n  const {\n    noteId\n  } = useParams();\n  const navigate = useNavigate();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    if (noteId) {\n      getNote();\n    }\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`/api/note/${noteId}/`);\n    let data = await response.json();\n    console.log(\"DATA:\", data);\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/note/${noteId}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"I9qnPDh2PoGBMRapsxP6SUrHKqU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","ReactComponent","ArrowLeft","Link","jsxDEV","_jsxDEV","NotePage","history","_s","noteId","navigate","note","setNote","getNote","response","fetch","data","json","console","log","updateNote","method","headers","body","JSON","stringify","handleSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["/home/swayam/note_project/note-frontend/src/pages/NotePage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n// import { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n// import {Link} from 'react-router-dom'\n\n// const NotePage = ({ match,history }) => {\n//   let noteId = match.params.id\n//   let [note, setNote] = useState(null)\n\n//   useEffect(() => {\n//     getNote()\n//   }, [noteId])\n\n//   let getNote = async () => {\n//     if(noteId === 'new') return\n//     let response = await fetch(`/api/notes/${noteId}`)\n//     let data = await response.json()\n//     setNote(data)\n//   }\n//   let createNote = async () => {\n//     fetch(`/api/notes/create/`, {\n//       method:\"POST\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(note)\n//     })\n//   }\n\n//   let updateNote = async () => {\n//     fetch(`/api/notes/${noteId}/update/`, {\n//       method:\"PUT\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(note)\n//     })\n//     getNote()\n    \n//   }\n//   let deleteNote = async () => {\n//     fetch(`/api/notes/${noteId}/delete/`,{\n//       method:\"DELETE\",\n//       headers:{\n//         'Content-Type': 'application/json'\n//       },\n      \n//     })\n//   }\n//   let handleDelete = () =>{\n//     deleteNote()\n//     history.push('/')\n    \n//   }\n\n//   let handleSubmit = () =>{\n//     if(noteId !=='new' && note.body=== \"\") {\n//       deleteNote()}\n\n//     else if(noteId=== 'new' && note.body !== \"\" ) {\n//       createNote()\n//     }\n//     else if(noteId !=='new') {\n//       updateNote()\n//     }\n//     history.push('/')\n    \n//   }\n//   return (\n\n//     <div className='note'>\n//       <div className='note-header'>\n//         <h3>\n//             <ArrowLeft onClick={handleSubmit}/>\n           \n//         </h3>\n\n//         {noteId !== 'new' ?(\n//         <button onClick={handleDelete}>Delete</button>) \n//         :(\n//           <button onClick={handleSubmit}>Done</button>) \n//         }\n      \n//       </div > \n//       <textarea onChange={(e) => {setNote({...note,'body':e.target.value})}}  value={note?.body}></textarea>\n// </div >\n   \n//   )\n// }\n\n// export default NotePage\n\nimport React, {useEffect, useState} from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\nconst NotePage = ({history}) => {\n\n    const {noteId} = useParams()\n    const navigate = useNavigate()\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        if(noteId){getNote()}\n    }, [noteId])\n\n    let getNote = async ()=> {\n        let response = await fetch(`/api/note/${noteId}/`)\n        let data = await response.json()\n        console.log(\"DATA:\", data)\n        setNote(data)\n    }\n\n    let updateNote = async () => {\n      fetch(`/api/note/${noteId}/update/`,{\n        method: \"PUT\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body:JSON.stringify(note)\n      })\n    }\n\n    let handleSubmit = ()=>\n    {\n      updateNote()\n      navigate('/')\n    }\n\n  return (\n    <div className=\"note\">\n      <div className=\"note-header\">\n        <h3>\n            <ArrowLeft onClick={handleSubmit}/>\n        </h3>  \n      </div>\n       <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} defaultValue={note?.body}></textarea>\n    </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}